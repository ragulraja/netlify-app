import Head from "next/head";
import Image from "next/image";
import Script from "next/script";
import Header from "../../components/Header/Header";
import Container from "@components/Container";
import styles from "@styles/Home.module.scss";
import Button from "@components/Button";
import Layout from "@components/Layout";

import {
  ApolloClient,
  InMemoryCache,
  ApolloProvider,
  useQuery,
  gql,
} from "@apollo/client";

export default function Home({ productsdata }) {
  return (
    <Layout>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
        <Container>
          {productsdata &&
            productsdata.map((product) => (
              // eslint-disable-next-line react/jsx-key
              <div className={styles.ProductDetails}>
                <h1>{product.title}</h1>
                <Image
                  src={`/images/${product.image}.jpg`}
                  alt={`Card of ${product.title}`}
                  width={600}
                  height={600}
                />
                <h3>{product.title}</h3>
                <p>${product.price}</p>
                <p>
                  <button
                    className="snipcart-add-item"
                    data-item-id={product.id}
                    data-item-price={product.price}
                    data-item-url="/"
                    data-item-description=""
                    data-item-image={`/images/${product.image}.jpg`}
                    data-item-name={product.title}
                  >
                    Add to Cart
                  </button>
                </p>
              </div>
            ))}
        </Container>
    </Layout>
  );
}

export async function getStaticProps({ params }) {

  const client = new ApolloClient({
    uri: "https://e-commerce-nextjs.hasura.app/v1/graphql",
    headers: {
      "Content-Type": "application/json",
      "x-hasura-admin-secret":
        "18i97XDhSr4z3PX3hb0gwsJJNtZbPsZ81p1PowYUoo3adoy1UqCW152U3CMhQ8y9",
    },
    cache: new InMemoryCache(),
  });

  const response = await client.query({
    query: gql`
      query Product($title: String!) {
        product(where: { title: { _eq: $title } }) {
          id
          price
          image
          title
        }
      }
    `,
    variables: {
      title: params.productSlug
    },
  });

  let productsdata = response.data.product;

  return {
    props: {
      productsdata,
    },
  };
}

export async function getStaticPaths() {
  const client = new ApolloClient({
    uri: "https://e-commerce-nextjs.hasura.app/v1/graphql",
    headers: {
      "Content-Type": "application/json",
      "x-hasura-admin-secret":
        "18i97XDhSr4z3PX3hb0gwsJJNtZbPsZ81p1PowYUoo3adoy1UqCW152U3CMhQ8y9",
    },
    cache: new InMemoryCache(),
  });

  const response = await client.query({
    query: gql`
      query Product {
        product {
          id
          title
        }
      }
    `,
  });

  const paths = response.data.product.map((node) => {
    return {
      params: {
        productSlug: node.title,
      },
    };
  });

  return {
    paths,
    fallback: false,
  };
}
